/**
 **********************************************************************
 * Copyright (c) 1988-2018 $organization$
 *
 * This software is provided by the author and contributors ``as is'' 
 * and any express or implied warranties, including, but not limited to, 
 * the implied warranties of merchantability and fitness for a particular 
 * purpose are disclaimed. In no event shall the author or contributors 
 * be liable for any direct, indirect, incidental, special, exemplary, 
 * or consequential damages (including, but not limited to, procurement 
 * of substitute goods or services; loss of use, data, or profits; or 
 * business interruption) however caused and on any theory of liability, 
 * whether in contract, strict liability, or tort (including negligence 
 * or otherwise) arising in any way out of the use of this software, 
 * even if advised of the possibility of such damage.
 *
 *   File: ccxxlexer.hxx
 *
 * Author: $author$
 *   Date: 9/3/2008, 5/2/2018
 **********************************************************************
 */
#ifndef _CCXXLEXER_HXX
#define _CCXXLEXER_HXX

#undef yyIsLexer
#undef yyLexer
#undef cYYIsLexer
#define yyIsLexer cCXXIsLexer
#define yyLexer cCXXLexer
#define cYYIsLexer cCXXLexerExtends

#include "cyylexer.hxx"
#include "clexerdelegate.hxx"
#include "clexer.hxx"

#if defined(c_NAMESPACE)
namespace c_NAMESPACE {
#endif /* defined(c_NAMESPACE) */

/**
 **********************************************************************
 *  Class: cCXXLexerDelegate
 *
 * Author: $author$
 *   Date: 9/3/2008
 **********************************************************************
 */
class cCXXLexerDelegate;
typedef cLexerDelegateT<cCXXLexerDelegate> cCXXLexerDelegateImplements;
class cCXXLexerDelegate: virtual public cCXXLexerDelegateImplements {
public:
    typedef cCXXLexerDelegateImplements cImplements;
    typedef cCXXLexerDelegate cDelegate;
};

/**
 **********************************************************************
 *  Class: cCXXLexer
 *
 * Author: $author$
 *   Date: 9/3/2008
 **********************************************************************
 */
typedef cLexerT
<cCXXLexerDelegate, cCXXLexerExtends,
 cLexerSource, cCharStreamInterface> cCXXLexerTExtends;
class cCXXLexer: public cCXXLexerTExtends {
public:
    typedef cCXXLexerTExtends cExtends;
    typedef cCXXLexer cDerives;

    cCXXLexer
    (cCXXLexerDelegate& delegate,
     cCharStreamInterface& out, cCharStreamInterface& in, cLexerSource &source)
    : cExtends(delegate, out, in, source) {
    }

    /* This function is generated by flex.
     */
    virtual int yylex();
};

#if defined(c_NAMESPACE)
}
#endif /* defined(c_NAMESPACE) */

#endif /* _CCXXLEXER_HXX */
